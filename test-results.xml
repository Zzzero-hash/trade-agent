<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="9" failures="1" skipped="13" tests="94" time="12.936" timestamp="2025-06-25T20:53:18.120644+00:00" hostname="6e22d7922a31"><testcase classname="tests.test_agent_comprehensive.TestAgentComprehensive" name="test_agent_initialization[td3]" time="1.573" /><testcase classname="tests.test_agent_comprehensive.TestAgentComprehensive" name="test_agent_initialization[sac]" time="0.025" /><testcase classname="tests.test_agent_comprehensive.TestAgentComprehensive" name="test_agent_action_selection[td3]" time="0.022" /><testcase classname="tests.test_agent_comprehensive.TestAgentComprehensive" name="test_agent_action_selection[sac]" time="0.015" /><testcase classname="tests.test_agent_comprehensive.TestAgentComprehensive" name="test_agent_training_pipeline[td3]" time="0.046" /><testcase classname="tests.test_agent_comprehensive.TestAgentComprehensive" name="test_agent_training_pipeline[sac]" time="0.042" /><testcase classname="tests.test_agent_comprehensive.TestAgentComprehensive" name="test_agent_save_load[td3]" time="0.017" /><testcase classname="tests.test_agent_comprehensive.TestAgentComprehensive" name="test_agent_save_load[sac]" time="0.013" /><testcase classname="tests.test_agent_comprehensive.TestAgentComprehensive" name="test_agent_configuration_validation" time="0.001" /><testcase classname="tests.test_agent_comprehensive.TestAgentIntegration" name="test_agent_environment_compatibility" time="0.001"><skipped type="pytest.skip" message="Environment integration tests - implement when environment is stable">/workspaces/trading-rl-agent/tests/test_agent_comprehensive.py:386: Environment integration tests - implement when environment is stable</skipped></testcase><testcase classname="tests.test_agent_comprehensive.TestAgentIntegration" name="test_agent_multi_step_training" time="0.000"><skipped type="pytest.skip" message="Multi-step training tests - implement after basic training is stable">/workspaces/trading-rl-agent/tests/test_agent_comprehensive.py:392: Multi-step training tests - implement after basic training is stable</skipped></testcase><testcase classname="tests.test_agent_comprehensive.TestAgentPerformance" name="test_agent_action_selection_speed" time="0.000"><skipped type="pytest.skip" message="Performance tests - implement after basic functionality is stable">/workspaces/trading-rl-agent/tests/test_agent_comprehensive.py:403: Performance tests - implement after basic functionality is stable</skipped></testcase><testcase classname="tests.test_agent_comprehensive.TestAgentPerformance" name="test_agent_training_memory_usage" time="0.000"><skipped type="pytest.skip" message="Memory usage tests - implement after basic functionality is stable">/workspaces/trading-rl-agent/tests/test_agent_comprehensive.py:408: Memory usage tests - implement after basic functionality is stable</skipped></testcase><testcase classname="tests.test_agent_comprehensive_clean.TestAgentComprehensive" name="test_agent_initialization[td3]" time="0.006" /><testcase classname="tests.test_agent_comprehensive_clean.TestAgentComprehensive" name="test_agent_initialization[sac]" time="0.006" /><testcase classname="tests.test_agent_comprehensive_clean.TestAgentComprehensive" name="test_agent_action_selection[td3]" time="0.007" /><testcase classname="tests.test_agent_comprehensive_clean.TestAgentComprehensive" name="test_agent_action_selection[sac]" time="0.008" /><testcase classname="tests.test_agent_comprehensive_clean.TestAgentComprehensive" name="test_agent_training_pipeline[td3]" time="0.020" /><testcase classname="tests.test_agent_comprehensive_clean.TestAgentComprehensive" name="test_agent_training_pipeline[sac]" time="0.031" /><testcase classname="tests.test_agent_comprehensive_clean.TestAgentComprehensive" name="test_agent_save_load[td3]" time="0.016" /><testcase classname="tests.test_agent_comprehensive_clean.TestAgentComprehensive" name="test_agent_save_load[sac]" time="0.012" /><testcase classname="tests.test_agent_comprehensive_clean.TestAgentComprehensive" name="test_agent_configuration_validation" time="0.001" /><testcase classname="tests.test_agent_comprehensive_clean.TestAgentIntegration" name="test_agent_environment_compatibility" time="0.001"><skipped type="pytest.skip" message="Environment integration tests - implement when environment is stable">/workspaces/trading-rl-agent/tests/test_agent_comprehensive_clean.py:384: Environment integration tests - implement when environment is stable</skipped></testcase><testcase classname="tests.test_agent_comprehensive_clean.TestAgentIntegration" name="test_agent_multi_step_training" time="0.000"><skipped type="pytest.skip" message="Multi-step training tests - implement after basic training is stable">/workspaces/trading-rl-agent/tests/test_agent_comprehensive_clean.py:390: Multi-step training tests - implement after basic training is stable</skipped></testcase><testcase classname="tests.test_agent_comprehensive_clean.TestAgentPerformance" name="test_agent_action_selection_speed" time="0.000"><skipped type="pytest.skip" message="Performance tests - implement after basic functionality is stable">/workspaces/trading-rl-agent/tests/test_agent_comprehensive_clean.py:401: Performance tests - implement after basic functionality is stable</skipped></testcase><testcase classname="tests.test_agent_comprehensive_clean.TestAgentPerformance" name="test_agent_training_memory_usage" time="0.000"><skipped type="pytest.skip" message="Memory usage tests - implement after basic functionality is stable">/workspaces/trading-rl-agent/tests/test_agent_comprehensive_clean.py:406: Memory usage tests - implement after basic functionality is stable</skipped></testcase><testcase classname="tests.test_agent_comprehensive_fixed.TestAgentComprehensive" name="test_agent_initialization[td3]" time="0.012" /><testcase classname="tests.test_agent_comprehensive_fixed.TestAgentComprehensive" name="test_agent_initialization[sac]" time="0.008" /><testcase classname="tests.test_agent_comprehensive_fixed.TestAgentComprehensive" name="test_agent_action_selection[td3]" time="0.009" /><testcase classname="tests.test_agent_comprehensive_fixed.TestAgentComprehensive" name="test_agent_action_selection[sac]" time="0.008" /><testcase classname="tests.test_agent_comprehensive_fixed.TestAgentComprehensive" name="test_agent_training_pipeline[td3]" time="0.018" /><testcase classname="tests.test_agent_comprehensive_fixed.TestAgentComprehensive" name="test_agent_training_pipeline[sac]" time="0.039" /><testcase classname="tests.test_agent_comprehensive_fixed.TestAgentComprehensive" name="test_agent_save_load[td3]" time="0.017" /><testcase classname="tests.test_agent_comprehensive_fixed.TestAgentComprehensive" name="test_agent_save_load[sac]" time="0.015" /><testcase classname="tests.test_agent_comprehensive_fixed.TestAgentComprehensive" name="test_agent_configuration_validation" time="0.001" /><testcase classname="tests.test_agent_comprehensive_fixed.TestAgentIntegration" name="test_agent_environment_compatibility" time="0.001"><skipped type="pytest.skip" message="Environment integration tests - implement when environment is stable">/workspaces/trading-rl-agent/tests/test_agent_comprehensive_fixed.py:380: Environment integration tests - implement when environment is stable</skipped></testcase><testcase classname="tests.test_agent_comprehensive_fixed.TestAgentIntegration" name="test_agent_multi_step_training" time="0.001"><skipped type="pytest.skip" message="Multi-step training tests - implement after basic training is stable">/workspaces/trading-rl-agent/tests/test_agent_comprehensive_fixed.py:386: Multi-step training tests - implement after basic training is stable</skipped></testcase><testcase classname="tests.test_agent_comprehensive_fixed.TestAgentPerformance" name="test_agent_action_selection_speed" time="0.001"><skipped type="pytest.skip" message="Performance tests - implement after basic functionality is stable">/workspaces/trading-rl-agent/tests/test_agent_comprehensive_fixed.py:397: Performance tests - implement after basic functionality is stable</skipped></testcase><testcase classname="tests.test_agent_comprehensive_fixed.TestAgentPerformance" name="test_agent_training_memory_usage" time="0.001"><skipped type="pytest.skip" message="Memory usage tests - implement after basic functionality is stable">/workspaces/trading-rl-agent/tests/test_agent_comprehensive_fixed.py:402: Memory usage tests - implement after basic functionality is stable</skipped></testcase><testcase classname="tests.test_backtester_stub" name="test_backtester_stub_methods" time="0.001" /><testcase classname="tests.test_build_datasets" name="test_add_hf_sentiment_merges_scores" time="0.018" /><testcase classname="tests.test_build_datasets" name="test_add_twitter_sentiment_scores" time="0.004" /><testcase classname="tests.test_build_datasets" name="test_integration_hf_and_twitter" time="0.007" /><testcase classname="tests.test_build_datasets" name="test_integration_full_pipeline" time="0.011" /><testcase classname="tests.test_cached_data" name="test_load_cached_csvs" time="0.045" /><testcase classname="tests.test_cached_data" name="test_load_cached_csvs_missing" time="0.002" /><testcase classname="tests.test_candle_patterns" name="test_detect_doji" time="0.002" /><testcase classname="tests.test_candle_patterns" name="test_detect_hammer" time="0.005" /><testcase classname="tests.test_candle_patterns" name="test_detect_inside_bar" time="0.003" /><testcase classname="tests.test_candle_patterns" name="test_detect_outside_bar" time="0.002" /><testcase classname="tests.test_candle_patterns" name="test_detect_engulfing" time="0.005" /><testcase classname="tests.test_candle_patterns" name="test_detect_three_white_soldiers" time="0.005" /><testcase classname="tests.test_candle_patterns" name="test_detect_three_black_crows" time="0.005" /><testcase classname="tests.test_candle_patterns" name="test_detect_harami" time="0.005" /><testcase classname="tests.test_candle_patterns" name="test_compute_candle_stats" time="0.013" /><testcase classname="tests.test_candle_patterns" name="test_compatibility_with_original_detectors" time="0.015" /><testcase classname="tests.test_candle_patterns" name="test_complex_pattern_combination" time="0.047" /><testcase classname="tests.test_cluster_utils" name="test_get_available_devices" time="0.001" /><testcase classname="tests.test_cnn_lstm" name="test_model_instantiation_from_yaml" time="0.032" /><testcase classname="tests.test_cnn_lstm" name="test_forward_pass" time="0.056" /><testcase classname="tests.test_comprehensive_agents.TestAgentInitialization" name="test_dummy" time="0.001" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestFeatureEngineering" name="test_technical_indicators_basic" time="0.000"><skipped type="pytest.skip" message="Test needs rework for correct function signatures">/workspaces/trading-rl-agent/tests/test_comprehensive_data_preprocessing.py:37: Test needs rework for correct function signatures</skipped></testcase><testcase classname="tests.test_comprehensive_data_preprocessing.TestFeatureEngineering" name="test_technical_indicators_edge_cases" time="0.005" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestFeatureEngineering" name="test_candlestick_patterns" time="0.003"><failure message="assert 1 is True">#x1B[1m#x1B[31mE   assert 1 is True#x1B[0m</failure></testcase><testcase classname="tests.test_comprehensive_data_preprocessing.TestFeatureEngineering" name="test_feature_generation_pipeline" time="0.075" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestDataValidation" name="test_missing_value_handling" time="0.002" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestDataValidation" name="test_infinite_value_handling" time="0.002" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestDataValidation" name="test_data_type_validation" time="0.001" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestDataValidation" name="test_data_range_validation" time="0.002" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestDataPreprocessing" name="test_data_standardization" time="0.002" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestDataPreprocessing" name="test_sequence_creation" time="0.001" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestDataPreprocessing" name="test_sequence_creation_edge_cases" time="0.001" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestSyntheticDataGeneration" name="test_synthetic_data_basic" time="0.003" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestSyntheticDataGeneration" name="test_synthetic_data_parameters" time="0.003" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestSyntheticDataGeneration" name="test_synthetic_data_reproducibility" time="0.002" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestDataPipelineIntegration" name="test_end_to_end_data_pipeline" time="0.057" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestDataPipelineIntegration" name="test_pipeline_with_missing_data" time="0.047" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestDataPipelineIntegration" name="test_pipeline_performance" time="2.259" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestDataValidationPipeline" name="test_data_quality_checks" time="0.002" /><testcase classname="tests.test_comprehensive_data_preprocessing.TestDataValidationPipeline" name="test_data_cleaning_pipeline" time="0.003" /><testcase classname="tests.test_comprehensive_environments.TestEnvironmentInteractions" name="test_environment_reset_consistency" time="0.000"><error message="failed on setup with &quot;file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 23&#10;      def test_environment_reset_consistency(self, trading_env):&#10;#x1B[31mE       fixture 'trading_env' not found#x1B[0m&#10;#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m&#10;#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m&#10;&#10;/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:23&quot;">file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 23
      def test_environment_reset_consistency(self, trading_env):
#x1B[31mE       fixture 'trading_env' not found#x1B[0m
#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m
#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m

/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:23</error></testcase><testcase classname="tests.test_comprehensive_environments.TestEnvironmentInteractions" name="test_environment_step_determinism" time="0.001"><error message="failed on setup with &quot;file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 35&#10;      def test_environment_step_determinism(self, trading_env):&#10;#x1B[31mE       fixture 'trading_env' not found#x1B[0m&#10;#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m&#10;#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m&#10;&#10;/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:35&quot;">file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 35
      def test_environment_step_determinism(self, trading_env):
#x1B[31mE       fixture 'trading_env' not found#x1B[0m
#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m
#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m

/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:35</error></testcase><testcase classname="tests.test_comprehensive_environments.TestEnvironmentInteractions" name="test_environment_action_space_validation" time="0.001"><error message="failed on setup with &quot;file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 57&#10;      def test_environment_action_space_validation(self, trading_env):&#10;#x1B[31mE       fixture 'trading_env' not found#x1B[0m&#10;#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m&#10;#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m&#10;&#10;/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:57&quot;">file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 57
      def test_environment_action_space_validation(self, trading_env):
#x1B[31mE       fixture 'trading_env' not found#x1B[0m
#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m
#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m

/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:57</error></testcase><testcase classname="tests.test_comprehensive_environments.TestEnvironmentInteractions" name="test_environment_observation_space_consistency" time="0.000"><error message="failed on setup with &quot;file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 82&#10;      def test_environment_observation_space_consistency(self, trading_env):&#10;#x1B[31mE       fixture 'trading_env' not found#x1B[0m&#10;#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m&#10;#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m&#10;&#10;/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:82&quot;">file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 82
      def test_environment_observation_space_consistency(self, trading_env):
#x1B[31mE       fixture 'trading_env' not found#x1B[0m
#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m
#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m

/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:82</error></testcase><testcase classname="tests.test_comprehensive_environments.TestEnvironmentInteractions" name="test_environment_reward_calculation" time="0.000"><error message="failed on setup with &quot;file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 97&#10;      def test_environment_reward_calculation(self, trading_env):&#10;#x1B[31mE       fixture 'trading_env' not found#x1B[0m&#10;#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m&#10;#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m&#10;&#10;/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:97&quot;">file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 97
      def test_environment_reward_calculation(self, trading_env):
#x1B[31mE       fixture 'trading_env' not found#x1B[0m
#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m
#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m

/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:97</error></testcase><testcase classname="tests.test_comprehensive_environments.TestEnvironmentInteractions" name="test_environment_episode_termination" time="0.000"><error message="failed on setup with &quot;file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 117&#10;      def test_environment_episode_termination(self, trading_env):&#10;#x1B[31mE       fixture 'trading_env' not found#x1B[0m&#10;#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m&#10;#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m&#10;&#10;/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:117&quot;">file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 117
      def test_environment_episode_termination(self, trading_env):
#x1B[31mE       fixture 'trading_env' not found#x1B[0m
#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m
#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m

/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:117</error></testcase><testcase classname="tests.test_comprehensive_environments.TestEnvironmentInteractions" name="test_environment_info_dict" time="0.001"><error message="failed on setup with &quot;file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 137&#10;      def test_environment_info_dict(self, trading_env):&#10;#x1B[31mE       fixture 'trading_env' not found#x1B[0m&#10;#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m&#10;#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m&#10;&#10;/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:137&quot;">file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 137
      def test_environment_info_dict(self, trading_env):
#x1B[31mE       fixture 'trading_env' not found#x1B[0m
#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m
#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m

/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:137</error></testcase><testcase classname="tests.test_comprehensive_environments.TestEnvironmentEdgeCases" name="test_environment_with_insufficient_data" time="0.006" /><testcase classname="tests.test_comprehensive_environments.TestEnvironmentEdgeCases" name="test_environment_with_invalid_config" time="0.001" /><testcase classname="tests.test_comprehensive_environments.TestEnvironmentEdgeCases" name="test_environment_with_missing_files" time="0.001" /><testcase classname="tests.test_comprehensive_environments.TestEnvironmentEdgeCases" name="test_environment_with_corrupted_data" time="0.003" /><testcase classname="tests.test_comprehensive_environments.TestEnvironmentEdgeCases" name="test_environment_with_extreme_values" time="0.007" /><testcase classname="tests.test_comprehensive_environments.TestMultiEnvironmentComparison" name="test_trading_env_vs_trader_env_compatibility" time="0.000"><error message="failed on setup with &quot;file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 267&#10;      def test_trading_env_vs_trader_env_compatibility(self, sample_csv_file):&#10;#x1B[31mE       fixture 'sample_csv_file' not found#x1B[0m&#10;#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m&#10;#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m&#10;&#10;/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:267&quot;">file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 267
      def test_trading_env_vs_trader_env_compatibility(self, sample_csv_file):
#x1B[31mE       fixture 'sample_csv_file' not found#x1B[0m
#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m
#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m

/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:267</error></testcase><testcase classname="tests.test_comprehensive_environments.TestMultiEnvironmentComparison" name="test_environment_state_preservation" time="0.001"><error message="failed on setup with &quot;file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 295&#10;      def test_environment_state_preservation(self, trading_env):&#10;#x1B[31mE       fixture 'trading_env' not found#x1B[0m&#10;#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m&#10;#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m&#10;&#10;/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:295&quot;">file /workspaces/trading-rl-agent/tests/test_comprehensive_environments.py, line 295
      def test_environment_state_preservation(self, trading_env):
#x1B[31mE       fixture 'trading_env' not found#x1B[0m
#x1B[31m&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, dynamic_test_config, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_csv_path, session_mocker, setup_test_data, test_dataset, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id#x1B[0m
#x1B[31m&gt;       use 'pytest --fixtures [testpath]' for help on them.#x1B[0m

/workspaces/trading-rl-agent/tests/test_comprehensive_environments.py:295</error></testcase></testsuite></testsuites>
