Metadata-Version: 2.4
Name: trade-agent
Version: 0.0.0
Summary: A trading agent for reinforcement learning.
Author-email: Trading RL Platform Team <contact@trading-rl-platform.org>
Project-URL: Homepage, https://github.com/trading-rl-platform/trading-rl-agent
Project-URL: Bug Tracker, https://github.com/trading-rl-platform/trading-rl-agent/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy<2.0.0,>=1.24.0
Requires-Dist: pandas>=2.0.0
Requires-Dist: pyarrow>=15.0.0
Requires-Dist: scikit-learn>=1.3.0
Requires-Dist: torch==2.8.0
Requires-Dist: gymnasium==1.0.0
Requires-Dist: ray[rllib,tune]==2.48.0
Requires-Dist: yfinance>=0.2.0
Requires-Dist: ta-lib>=0.4.0
Requires-Dist: stable-baselines3[extra]==2.7.0
Requires-Dist: lightgbm>=3.3.0
Requires-Dist: html5lib>=1.1.0
Requires-Dist: beautifulsoup4>=4.12.0
Requires-Dist: PyYAML>=6.0.0
Requires-Dist: scipy>=1.10.0
Requires-Dist: matplotlib>=3.6.0
Requires-Dist: psutil>=5.9.0
Requires-Dist: optuna<3.0.0,>=2.10.0
Requires-Dist: xgboost>=1.6.0
Requires-Dist: tsfresh>=0.18.0
Requires-Dist: lxml>=0.9.0
Requires-Dist: hexdump>=3.0.0
Requires-Dist: plotly>=5.0.0
Requires-Dist: seaborn>=0.12.0
Requires-Dist: tensorboard>=2.12.0
Requires-Dist: psycopg2-binary>=2.9.0
Requires-Dist: sqlalchemy>=2.0.0
Requires-Dist: sphinx>=7.0.0
Requires-Dist: sphinx-rtd-theme>=1.2.0
Requires-Dist: myst_parser>=2.0.0
Requires-Dist: sphinx_autodoc_typehints>=1.24.0
Requires-Dist: sphinxcontrib-mermaid>=0.9.2
Requires-Dist: sphinx-multiversion>=0.2.4
Requires-Dist: setuptools>=68.0.0
Requires-Dist: ruff>=0.1.0
Requires-Dist: black>=23.3.0
Requires-Dist: isort>=5.10.0
Requires-Dist: mypy>=1.0.0
Requires-Dist: flake8>=6.0.0
Requires-Dist: autoflake>=2.0.0
Requires-Dist: pydocstyle>=6.3.0
Requires-Dist: pyupgrade>=3.10.0
Requires-Dist: pre-commit>=3.0.0
Requires-Dist: bandit>=1.7.0
Requires-Dist: pytest>=7.0.0
Requires-Dist: pytest-cov>=4.0.0
Requires-Dist: coverage>=7.0.0
Requires-Dist: hypothesis>=6.80.0
Requires-Dist: locust>=2.15.0
Requires-Dist: mutmut>=2.4.0
Requires-Dist: interrogate>=1.5.0
Requires-Dist: radon>=6.0.1
Requires-Dist: pip-audit>=2.6.0
Requires-Dist: nbqa>=1.7.0
Requires-Dist: types-PyYAML>=6.0.0
Requires-Dist: types-requests>=2.31.0
Requires-Dist: types-setuptools>=68.0.0
Requires-Dist: pylint>=2.16.0
Requires-Dist: hydra-core>=1.3.2
Requires-Dist: hydra-optuna-sweeper>=1.2.0
Requires-Dist: polars>=0.20.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: tenacity>=8.2.0
Requires-Dist: fastapi>=0.111.0
Requires-Dist: uvicorn[standard]>=0.30.0
Requires-Dist: mlflow>=2.0.0
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Dynamic: license-file

trade_agent layout:
trade_agent/
**init**.py (existing)
engine/ (existing core execution area)
**init**.py
pipeline.py (existing: pipeline orchestration)
nodes/ (existing container for node types)
**init**.py
data_source.py (planned: market data fetch node)
sma.py (planned: SMA transform)
crossover.py (planned: SMA crossover signal)
(future) features/ (more indicator/feature nodes)
(future) execution.py (higher-level execute helpers)
backtest/ (existing namespace reserved)
**init**.py
runner.py (planned: SimpleLongOnlyBacktester + BacktestResult)
(future) metrics.py (planned: separated performance metrics)
telemetry/
**init**.py
core.py (planned: opt-in event recorder, env flag)
flags/
**init**.py
store.py (existing: feature flag store)
api/
**init**.py
app.py
routes/
**init**.py
health.py
pipelines.py
persistence/
**init**.py
repository.py
sqlite.py
utils/
**init**.py
logging.py
scripts/
verify_release.py (existing release gate script)
tests/
**init**.py
test_engine_pipeline.py (existing baseline)
test_backtest_runner.py (planned)
test_api_health.py (planned)
test_version_bump.py (existing)
test_flags.py (existing)
core/
**init**.py
test_engine_pipeline.py (planned)
test_metrics.py (planned)
test_telemetry_opt_in.py (planned)

## Data Storage (OHLCV ParquetStore)

The project persists OHLCV candles in partitioned Parquet (Hive) layout:

```
data/ohlcv/
    symbol=BTC-USD/timeframe=1m/year=2025/month=08/part-*.parquet
data/catalog.yaml
```

Catalog tracks per (symbol, timeframe):

- start/end (ISO UTC)
- cumulative row count
- last_updated

Basic usage:

```python
from trade_agent.engine.nodes.data_handler import ParquetStore
import pandas as pd

store = ParquetStore("data")
df = pd.DataFrame({
    "timestamp": pd.date_range("2025-08-27", periods=3, freq="T", tz="UTC"),
    "open":[1.0,2.0,3.0],
    "high":[1.1,2.1,3.1],
    "low":[0.9,1.9,2.9],
    "close":[1.05,2.05,3.05],
    "volume":[100.0,110.0,120.0],
})
store.write(df, "BTC-USD", "1m")
subset = store.read("BTC-USD", "1m", end="2025-08-27T00:01:00Z")
print(subset)
print(store.list_series())
```

Run the unit test:

```bash
pytest -k parquet_store -q
```

### Design Notes

- Timestamps stored as UTC (timestamp[ns, tz=UTC]).
- Partitioned by symbol, timeframe, year, month.
- Batch write de-duplicates timestamps within the batch (keep=last).
- Range filtering pushed down via pyarrow.dataset.
