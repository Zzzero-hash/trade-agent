# Production-Grade Trading RL System Requirements
# Following industry standards used by major financial institutions

# ========================================
# Core Framework - Industry Standard
# ========================================
finrl>=3.6.0                 # Industry standard RL trading framework (JPMorgan, Goldman Sachs)
ray[rllib]>=2.8.0           # Distributed RL training (used by Uber, Shopify, hedge funds)
ray[tune]>=2.8.0            # Hyperparameter optimization
ray[serve]>=2.8.0           # Model serving for production

# ========================================
# MLOps and Model Governance
# ========================================
mlflow>=2.8.0               # Experiment tracking and model registry
optuna>=3.4.0               # Advanced hyperparameter optimization
wandb>=0.16.0               # Additional experiment tracking
clearml>=1.13.0             # Enterprise ML pipeline orchestration

# ========================================
# Professional Market Data
# ========================================
alpaca-trade-api>=3.0.0     # Professional broker API
polygon-api-client>=1.13.0  # High-quality market data
yfinance>=0.2.24            # Backup data source (free tier)
pandas-market-calendars>=4.3.0  # Trading calendar management

# ========================================
# Risk Management and Financial Math
# ========================================
quantlib>=1.32              # Quantitative finance library
riskfolio-lib>=4.8.0        # Portfolio optimization and risk management
pyfolio>=0.9.2              # Performance and risk analysis
empyrical>=0.5.5            # Statistical risk metrics

# ========================================
# Technical Analysis - Professional Grade
# ========================================
ta-lib>=0.4.25              # Industry standard technical analysis
ta>=0.10.2                  # Additional technical indicators
finta>=1.3                  # Financial technical analysis

# ========================================
# Deep Learning - Production Ready
# ========================================
torch>=2.1.0                # PyTorch for neural networks
torchvision>=0.16.0         # Computer vision components
torch-audio>=2.1.0          # Audio processing (sentiment analysis)
lightning>=2.1.0            # PyTorch Lightning for training
transformers>=4.35.0        # Transformer models for market analysis
accelerate>=0.24.0          # Distributed training acceleration

# ========================================
# Data Processing - High Performance
# ========================================
pandas>=2.1.0               # Data manipulation
numpy>=1.24.0               # Numerical computing
polars>=0.19.0              # High-performance DataFrame library
dask>=2023.11.0             # Distributed computing
modin>=0.24.0               # Parallel pandas processing

# ========================================
# Time Series Analysis
# ========================================
statsmodels>=0.14.0         # Statistical modeling
arch>=6.2.0                 # GARCH models for volatility
prophet>=1.1.5              # Time series forecasting
pmdarima>=2.0.4             # AutoARIMA for time series

# ========================================
# Monitoring and Observability
# ========================================
prometheus-client>=0.19.0   # Metrics collection
grafana-api>=1.0.3          # Dashboard integration
datadog>=0.47.0             # Application monitoring
sentry-sdk>=1.38.0          # Error tracking

# ========================================
# Database and Storage
# ========================================
sqlalchemy>=2.0.0           # Database ORM
psycopg2-binary>=2.9.0      # PostgreSQL adapter
influxdb-client>=1.38.0     # Time series database
redis>=5.0.0                # In-memory data store
hdf5storage>=0.1.18         # HDF5 file format

# ========================================
# Cloud and Infrastructure
# ========================================
boto3>=1.34.0               # AWS SDK
google-cloud-storage>=2.10.0  # Google Cloud Storage
azure-storage-blob>=12.19.0 # Azure Blob Storage
kubernetes>=28.1.0          # Kubernetes Python client

# ========================================
# API and Web Services
# ========================================
fastapi>=0.104.0            # High-performance web framework
uvicorn>=0.24.0             # ASGI server
pydantic>=2.5.0             # Data validation
httpx>=0.25.0               # Async HTTP client
websockets>=12.0            # Real-time data streaming

# ========================================
# Testing and Quality Assurance
# ========================================
pytest>=7.4.0              # Testing framework
pytest-cov>=4.1.0          # Coverage reporting
pytest-asyncio>=0.21.0     # Async testing
pytest-xdist>=3.3.0        # Parallel testing
hypothesis>=6.88.0          # Property-based testing
faker>=20.1.0               # Test data generation

# ========================================
# Code Quality and Security
# ========================================
black>=23.11.0              # Code formatting
isort>=5.12.0               # Import sorting
flake8>=6.1.0               # Linting
mypy>=1.7.0                 # Type checking
bandit>=1.7.5               # Security scanning
safety>=2.3.0               # Dependency security check

# ========================================
# Utilities and Helpers
# ========================================
python-dotenv>=1.0.0        # Environment variable management
click>=8.1.0                # Command line interface
tqdm>=4.66.0                # Progress bars
joblib>=1.3.0               # Parallel processing
schedule>=1.2.0             # Task scheduling
loguru>=0.7.0               # Advanced logging

# ========================================
# Jupyter and Development
# ========================================
jupyter>=1.0.0              # Jupyter notebook
jupyterlab>=4.0.0           # JupyterLab interface
ipywidgets>=8.1.0           # Interactive widgets
plotly>=5.17.0              # Interactive plotting
bokeh>=3.3.0                # Web-based plotting

# ========================================
# Version Pinning for Stability
# ========================================
# Core dependencies pinned for production stability
scikit-learn==1.3.2
matplotlib==3.8.2
seaborn==0.13.0
scipy==1.11.4
