[pytest]
# Test discovery and organization
testpaths =
    tests/unit
    tests/integration
    tests/performance
    tests/smoke
    tests/property
    tests/chaos
    tests/load
    tests/contract
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Robust test execution configuration
addopts =
    -v
    --strict-markers
    --strict-config
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=json:coverage.json
    --cov-fail-under=95
    --durations=10
    --maxfail=5
    --junitxml=test-results.xml
    --cache-clear
    --html=htmlcov/test-report.html
    --self-contained-html
    --json-report
    --json-report-file=test-results.json
    --randomly-seed=42
    --timeout=300

# Comprehensive test markers for organization
markers =
    # Test categories
    unit: mark as unit test (fast, isolated)
    integration: mark as integration test (components working together)
    performance: mark as performance test
    smoke: mark as smoke test for CI pipeline
    e2e: mark as end-to-end test (full pipeline)

    # Performance markers
    fast: mark as fast test (<1 second)
    slow: mark as slow test (>1 second)
    very_slow: mark as very slow test (>5 seconds)

    # Resource requirements
    gpu: mark as requiring GPU hardware
    network: mark as requiring network access
    ray: mark as requiring Ray cluster
    ml: mark as requiring ML dependencies (PyTorch, etc.)

    # Test types
    regression: mark as regression test
    memory: mark as memory usage test
    security: mark as security test
    stress: mark as stress test (high load testing)
    load: mark as load testing (concurrent user simulation)
    property: mark as property-based test (using hypothesis)
    chaos: mark as chaos engineering test
    contract: mark as contract testing
    data_quality: mark as data quality test
    flaky: mark as potentially flaky test
    benchmark: mark as performance benchmark test

    # Module-specific markers
    core: mark as core infrastructure test
    data: mark as data pipeline test
    model: mark as model architecture test
    training: mark as training pipeline test
    risk: mark as risk management test
    portfolio: mark as portfolio management test
    cli: mark as CLI interface test

# Warning filters for clean test output
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning
    ignore::UserWarning
    ignore::RuntimeWarning
    ignore::pytest.PytestUnknownMarkWarning

# Test discovery exclusions
norecursedirs =
    .git
    .pytest_cache
    __pycache__
    *.egg-info
    build
    dist
    .venv
    venv
    env
    ray_results
    optimization_results
    experiments
    htmlcov
    test_optimization_results
    test_output
    test_logs
    test_models
    test_data

# Minimum pytest version
minversion = 7.0

# Required plugins for robust testing
required_plugins =
    pytest-cov
    pytest-mock
    pytest-xdist
    pytest-asyncio
    pytest-timeout
    pytest-benchmark
    pytest-randomly
    pytest-repeat
    pytest-rerunfailures
    pytest-html
    pytest-json-report
    hypothesis

# Note: Environment variables are set in conftest.py and test execution scripts
# for better compatibility across pytest versions
