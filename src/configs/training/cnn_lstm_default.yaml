# Default CNN-LSTM Training Configuration
# This configuration provides sensible defaults for training CNN-LSTM models
# with sentiment analysis integration

# Model Architecture
model:
  name: "cnn_lstm_v1"
  input_dim: 20  # Number of features (technical indicators + sentiment)
  lstm_units: 128  # Changed from hidden_dim to match CNNLSTMConfig
  cnn_filters: [32, 64]
  cnn_kernel_sizes: [3, 3]
  dropout: 0.2
  output_size: 3  # Changed from output_dim to match CNNLSTMConfig - Buy, Hold, Sell predictions
  use_attention: false
  
# Data Configuration
data:
  sequence_length: 60  # Number of time steps to look back
  prediction_horizon: 1  # Number of steps to predict ahead
  train_split: 0.7
  val_split: 0.2
  test_split: 0.1
  batch_size: 32
  shuffle: true
  
  # Feature engineering
  features:
    technical_indicators: true
    sentiment_analysis: true
    price_changes: true
    volume_features: true
    
  # Sentiment configuration
  sentiment:
    sources: ["news", "social"]
    cache_enabled: true
    cache_ttl: 3600  # 1 hour
    aggregation_window: "1h"
    
# Training Configuration
training:
  epochs: 100
  learning_rate: 0.001
  weight_decay: 0.0001
  early_stopping:
    patience: 10
    min_delta: 0.001
    monitor: "val_loss"
    
  # Optimization
  optimizer: "adam"
  scheduler:
    type: "reduce_on_plateau"
    factor: 0.5
    patience: 5
    min_lr: 0.00001
    
  # Loss function
  loss_function: "cross_entropy"
  class_weights: null  # Auto-balance or specify [1.0, 1.0, 1.0]
  
# Validation & Metrics
validation:
  frequency: 1  # Validate every N epochs
  metrics: ["accuracy", "precision", "recall", "f1"]
  save_best_model: true
  
# Model Persistence
persistence:
  save_dir: "models/cnn_lstm"
  checkpoint_frequency: 10  # Save checkpoint every N epochs
  save_optimizer_state: true
  
# Ray Configuration (for distributed training)
ray:
  enabled: false
  num_workers: 2
  resources_per_worker:
    cpu: 1
    gpu: 0
    
# Logging & Monitoring
logging:
  level: "INFO"
  log_dir: "logs/training"
  tensorboard: true
  wandb:
    enabled: false
    project: "trading-rl-agent"
    entity: null
    
# Random Seeds for Reproducibility
random_seed: 42
torch_seed: 42
numpy_seed: 42
